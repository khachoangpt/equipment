// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser } from '@hey-api/client-axios';
import type { AppControllerGetHelloError, AppControllerGetHelloResponse, ComponentsControllerCreateData, ComponentsControllerCreateError, ComponentsControllerCreateResponse, ComponentsControllerFindAllError, ComponentsControllerFindAllResponse, ComponentsControllerFindOneData, ComponentsControllerFindOneError, ComponentsControllerFindOneResponse, ComponentsControllerUpdateData, ComponentsControllerUpdateError, ComponentsControllerUpdateResponse, ComponentsControllerRemoveData, ComponentsControllerRemoveError, ComponentsControllerRemoveResponse, ProductProfilesControllerCreateData, ProductProfilesControllerCreateError, ProductProfilesControllerCreateResponse, ProductProfilesControllerFindAllError, ProductProfilesControllerFindAllResponse, ProductProfilesControllerFindOneData, ProductProfilesControllerFindOneError, ProductProfilesControllerFindOneResponse, ProductProfilesControllerUpdateData, ProductProfilesControllerUpdateError, ProductProfilesControllerUpdateResponse, ProductProfilesControllerRemoveData, ProductProfilesControllerRemoveError, ProductProfilesControllerRemoveResponse, AuthControllerLoginData, AuthControllerLoginError, AuthControllerLoginResponse, EquipmentGroupsControllerCreateData, EquipmentGroupsControllerCreateError, EquipmentGroupsControllerCreateResponse, EquipmentGroupsControllerFindAllError, EquipmentGroupsControllerFindAllResponse, EquipmentGroupsControllerFindOneData, EquipmentGroupsControllerFindOneError, EquipmentGroupsControllerFindOneResponse, EquipmentGroupsControllerUpdateData, EquipmentGroupsControllerUpdateError, EquipmentGroupsControllerUpdateResponse, EquipmentGroupsControllerRemoveData, EquipmentGroupsControllerRemoveError, EquipmentGroupsControllerRemoveResponse, QualityLevelsControllerCreateData, QualityLevelsControllerCreateError, QualityLevelsControllerCreateResponse, QualityLevelsControllerFindAllError, QualityLevelsControllerFindAllResponse, QualityLevelsControllerFindOneData, QualityLevelsControllerFindOneError, QualityLevelsControllerFindOneResponse, QualityLevelsControllerUpdateData, QualityLevelsControllerUpdateError, QualityLevelsControllerUpdateResponse, QualityLevelsControllerRemoveData, QualityLevelsControllerRemoveError, QualityLevelsControllerRemoveResponse, UnitsControllerCreateData, UnitsControllerCreateError, UnitsControllerCreateResponse, UnitsControllerFindAllError, UnitsControllerFindAllResponse, UnitsControllerFindOneData, UnitsControllerFindOneError, UnitsControllerFindOneResponse, UnitsControllerUpdateData, UnitsControllerUpdateError, UnitsControllerUpdateResponse, UnitsControllerRemoveData, UnitsControllerRemoveError, UnitsControllerRemoveResponse, UsersControllerCreateData, UsersControllerCreateError, UsersControllerCreateResponse, UsersControllerFindAllError, UsersControllerFindAllResponse, UsersControllerFindOneData, UsersControllerFindOneError, UsersControllerFindOneResponse, UsersControllerUpdateData, UsersControllerUpdateError, UsersControllerUpdateResponse, UsersControllerRemoveData, UsersControllerRemoveError, UsersControllerRemoveResponse, ActivityLogsControllerSearchData, ActivityLogsControllerSearchError, ActivityLogsControllerSearchResponse, ActivityLogsControllerFindByInstanceData, ActivityLogsControllerFindByInstanceError, ActivityLogsControllerFindByInstanceResponse, SyncEquipmentControllerCreateData, SyncEquipmentControllerCreateError, SyncEquipmentControllerCreateResponse, SyncEquipmentControllerFindAllError, SyncEquipmentControllerFindAllResponse, SyncEquipmentControllerFindOneData, SyncEquipmentControllerFindOneError, SyncEquipmentControllerFindOneResponse, SyncEquipmentControllerUpdateData, SyncEquipmentControllerUpdateError, SyncEquipmentControllerUpdateResponse, SyncEquipmentControllerRemoveData, SyncEquipmentControllerRemoveError, SyncEquipmentControllerRemoveResponse, EquipmentInstancesControllerCreateData, EquipmentInstancesControllerCreateError, EquipmentInstancesControllerCreateResponse, EquipmentInstancesControllerSearchData, EquipmentInstancesControllerSearchError, EquipmentInstancesControllerSearchResponse, EquipmentInstancesControllerFindOneData, EquipmentInstancesControllerFindOneError, EquipmentInstancesControllerFindOneResponse, EquipmentInstancesControllerUpdateData, EquipmentInstancesControllerUpdateError, EquipmentInstancesControllerUpdateResponse, EquipmentInstancesControllerRemoveData, EquipmentInstancesControllerRemoveError, EquipmentInstancesControllerRemoveResponse, EquipmentInstancesControllerHandoverData, EquipmentInstancesControllerHandoverError, EquipmentInstancesControllerHandoverResponse, EquipmentInstancesControllerRepairData, EquipmentInstancesControllerRepairError, EquipmentInstancesControllerRepairResponse, EquipmentInstancesControllerDisposeData, EquipmentInstancesControllerDisposeError, EquipmentInstancesControllerDisposeResponse } from './types.gen';

export const client = createClient(createConfig({
    throwOnError: true
}));

export class AppService {
    public static appControllerGetHello<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<AppControllerGetHelloResponse, AppControllerGetHelloError, ThrowOnError>({
            ...options,
            url: '/api/v1'
        });
    }
    
}

export class AssemblyEquipmentsComponentsService {
    /**
     * [Admin] Thêm một vật tư/linh kiện mới
     */
    public static componentsControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<ComponentsControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<ComponentsControllerCreateResponse, ComponentsControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/v1/assembly-equipments/components'
        });
    }
    
    /**
     * Lấy danh sách vật tư/linh kiện
     */
    public static componentsControllerFindAll<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ComponentsControllerFindAllResponse, ComponentsControllerFindAllError, ThrowOnError>({
            ...options,
            url: '/api/v1/assembly-equipments/components'
        });
    }
    
    /**
     * Lấy thông tin một vật tư/linh kiện theo ID
     */
    public static componentsControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<ComponentsControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<ComponentsControllerFindOneResponse, ComponentsControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/v1/assembly-equipments/components/{id}'
        });
    }
    
    /**
     * [Admin] Cập nhật thông tin một vật tư/linh kiện
     */
    public static componentsControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<ComponentsControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<ComponentsControllerUpdateResponse, ComponentsControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/v1/assembly-equipments/components/{id}'
        });
    }
    
    /**
     * [Admin] Xóa một vật tư/linh kiện
     */
    public static componentsControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<ComponentsControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<ComponentsControllerRemoveResponse, ComponentsControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/v1/assembly-equipments/components/{id}'
        });
    }
    
}

export class AssemblyEquipmentsProductProfilesService {
    /**
     * [Admin] Tạo một cấu hình sản phẩm lắp ghép mới
     */
    public static productProfilesControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<ProductProfilesControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<ProductProfilesControllerCreateResponse, ProductProfilesControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/v1/assembly-equipments/product-profiles'
        });
    }
    
    /**
     * Lấy danh sách cấu hình sản phẩm
     */
    public static productProfilesControllerFindAll<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ProductProfilesControllerFindAllResponse, ProductProfilesControllerFindAllError, ThrowOnError>({
            ...options,
            url: '/api/v1/assembly-equipments/product-profiles'
        });
    }
    
    /**
     * Lấy thông tin một cấu hình sản phẩm theo ID
     */
    public static productProfilesControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<ProductProfilesControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<ProductProfilesControllerFindOneResponse, ProductProfilesControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/v1/assembly-equipments/product-profiles/{id}'
        });
    }
    
    /**
     * [Admin] Cập nhật một cấu hình sản phẩm
     */
    public static productProfilesControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<ProductProfilesControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<ProductProfilesControllerUpdateResponse, ProductProfilesControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/v1/assembly-equipments/product-profiles/{id}'
        });
    }
    
    /**
     * [Admin] Xóa một cấu hình sản phẩm
     */
    public static productProfilesControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<ProductProfilesControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<ProductProfilesControllerRemoveResponse, ProductProfilesControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/v1/assembly-equipments/product-profiles/{id}'
        });
    }
    
}

export class AuthService {
    public static authControllerLogin<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<AuthControllerLoginData, ThrowOnError>) {
        return (options?.client ?? client).post<AuthControllerLoginResponse, AuthControllerLoginError, ThrowOnError>({
            ...options,
            url: '/api/v1/auth/login'
        });
    }
    
}

export class CategoriesEquipmentGroupsService {
    /**
     * [Admin] Tạo một nhóm loại trang bị mới
     */
    public static equipmentGroupsControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentGroupsControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<EquipmentGroupsControllerCreateResponse, EquipmentGroupsControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/v1/equipment-groups'
        });
    }
    
    /**
     * Lấy danh sách nhóm loại trang bị
     */
    public static equipmentGroupsControllerFindAll<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<EquipmentGroupsControllerFindAllResponse, EquipmentGroupsControllerFindAllError, ThrowOnError>({
            ...options,
            url: '/api/v1/equipment-groups'
        });
    }
    
    /**
     * Lấy thông tin một nhóm loại trang bị theo ID
     */
    public static equipmentGroupsControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentGroupsControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<EquipmentGroupsControllerFindOneResponse, EquipmentGroupsControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/v1/equipment-groups/{id}'
        });
    }
    
    /**
     * [Admin] Cập nhật một nhóm loại trang bị
     */
    public static equipmentGroupsControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentGroupsControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<EquipmentGroupsControllerUpdateResponse, EquipmentGroupsControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/v1/equipment-groups/{id}'
        });
    }
    
    /**
     * [Admin] Xóa một nhóm loại trang bị
     */
    public static equipmentGroupsControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentGroupsControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<EquipmentGroupsControllerRemoveResponse, EquipmentGroupsControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/v1/equipment-groups/{id}'
        });
    }
    
}

export class CategoriesQualityLevelsService {
    /**
     * [Admin] Tạo một phân cấp chất lượng mới
     */
    public static qualityLevelsControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<QualityLevelsControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<QualityLevelsControllerCreateResponse, QualityLevelsControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/v1/quality-levels'
        });
    }
    
    /**
     * Lấy danh sách phân cấp chất lượng
     */
    public static qualityLevelsControllerFindAll<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<QualityLevelsControllerFindAllResponse, QualityLevelsControllerFindAllError, ThrowOnError>({
            ...options,
            url: '/api/v1/quality-levels'
        });
    }
    
    /**
     * Lấy thông tin một phân cấp chất lượng theo ID
     */
    public static qualityLevelsControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<QualityLevelsControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<QualityLevelsControllerFindOneResponse, QualityLevelsControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/v1/quality-levels/{id}'
        });
    }
    
    /**
     * [Admin] Cập nhật một phân cấp chất lượng
     */
    public static qualityLevelsControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<QualityLevelsControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<QualityLevelsControllerUpdateResponse, QualityLevelsControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/v1/quality-levels/{id}'
        });
    }
    
    /**
     * [Admin] Xóa một phân cấp chất lượng
     */
    public static qualityLevelsControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<QualityLevelsControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<QualityLevelsControllerRemoveResponse, QualityLevelsControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/v1/quality-levels/{id}'
        });
    }
    
}

export class CoreUnitsService {
    /**
     * [Admin] Tạo một đơn vị mới
     */
    public static unitsControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UnitsControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<UnitsControllerCreateResponse, UnitsControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/v1/units'
        });
    }
    
    /**
     * Lấy danh sách tất cả đơn vị
     */
    public static unitsControllerFindAll<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<UnitsControllerFindAllResponse, UnitsControllerFindAllError, ThrowOnError>({
            ...options,
            url: '/api/v1/units'
        });
    }
    
    /**
     * Lấy thông tin một đơn vị theo ID
     */
    public static unitsControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UnitsControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<UnitsControllerFindOneResponse, UnitsControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/v1/units/{id}'
        });
    }
    
    /**
     * [Admin] Cập nhật thông tin một đơn vị
     */
    public static unitsControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UnitsControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<UnitsControllerUpdateResponse, UnitsControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/v1/units/{id}'
        });
    }
    
    /**
     * [Admin] Xóa một đơn vị
     */
    public static unitsControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UnitsControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<UnitsControllerRemoveResponse, UnitsControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/v1/units/{id}'
        });
    }
    
}

export class CoreUsersService {
    /**
     * [Admin] Tạo người dùng mới
     */
    public static usersControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UsersControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<UsersControllerCreateResponse, UsersControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/v1/users'
        });
    }
    
    /**
     * [Admin] Lấy danh sách tất cả người dùng
     */
    public static usersControllerFindAll<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<UsersControllerFindAllResponse, UsersControllerFindAllError, ThrowOnError>({
            ...options,
            url: '/api/v1/users'
        });
    }
    
    /**
     * [Admin] Lấy thông tin một người dùng theo ID
     */
    public static usersControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UsersControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<UsersControllerFindOneResponse, UsersControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/{id}'
        });
    }
    
    /**
     * [Admin] Cập nhật thông tin người dùng
     */
    public static usersControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UsersControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<UsersControllerUpdateResponse, UsersControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/{id}'
        });
    }
    
    /**
     * [Admin] Xóa người dùng
     */
    public static usersControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UsersControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<UsersControllerRemoveResponse, UsersControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/{id}'
        });
    }
    
}

export class OperationsActivityLogsService {
    /**
     * Tìm kiếm nhật ký hoạt động
     */
    public static activityLogsControllerSearch<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<ActivityLogsControllerSearchData, ThrowOnError>) {
        return (options?.client ?? client).get<ActivityLogsControllerSearchResponse, ActivityLogsControllerSearchError, ThrowOnError>({
            ...options,
            url: '/api/v1/activity-logs/search'
        });
    }
    
    /**
     * Lấy lịch sử hoạt động của một trang bị
     */
    public static activityLogsControllerFindByInstance<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<ActivityLogsControllerFindByInstanceData, ThrowOnError>) {
        return (options?.client ?? client).get<ActivityLogsControllerFindByInstanceResponse, ActivityLogsControllerFindByInstanceError, ThrowOnError>({
            ...options,
            url: '/api/v1/activity-logs/instance/{instanceId}'
        });
    }
    
}

export class SyncEquipmentsCatalogService {
    /**
     * [Admin] Tạo một loại trang bị mới trong danh mục
     */
    public static syncEquipmentControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<SyncEquipmentControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<SyncEquipmentControllerCreateResponse, SyncEquipmentControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/catalog'
        });
    }
    
    /**
     * Lấy danh sách các loại trang bị
     */
    public static syncEquipmentControllerFindAll<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<SyncEquipmentControllerFindAllResponse, SyncEquipmentControllerFindAllError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/catalog'
        });
    }
    
    /**
     * Lấy thông tin một loại trang bị theo ID
     */
    public static syncEquipmentControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<SyncEquipmentControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<SyncEquipmentControllerFindOneResponse, SyncEquipmentControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/catalog/{id}'
        });
    }
    
    /**
     * [Admin] Cập nhật thông tin một loại trang bị
     */
    public static syncEquipmentControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<SyncEquipmentControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<SyncEquipmentControllerUpdateResponse, SyncEquipmentControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/catalog/{id}'
        });
    }
    
    /**
     * [Admin] Xóa một loại trang bị khỏi danh mục
     */
    public static syncEquipmentControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<SyncEquipmentControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<SyncEquipmentControllerRemoveResponse, SyncEquipmentControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/catalog/{id}'
        });
    }
    
}

export class SyncEquipmentsInstancesService {
    /**
     * [Admin] Thêm một phiên bản trang bị mới (nhập kho)
     */
    public static equipmentInstancesControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentInstancesControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<EquipmentInstancesControllerCreateResponse, EquipmentInstancesControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/instances'
        });
    }
    
    /**
     * Tìm kiếm nâng cao các phiên bản trang bị
     */
    public static equipmentInstancesControllerSearch<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<EquipmentInstancesControllerSearchData, ThrowOnError>) {
        return (options?.client ?? client).get<EquipmentInstancesControllerSearchResponse, EquipmentInstancesControllerSearchError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/instances/search'
        });
    }
    
    /**
     * Lấy thông tin một phiên bản trang bị theo ID
     */
    public static equipmentInstancesControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentInstancesControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<EquipmentInstancesControllerFindOneResponse, EquipmentInstancesControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/instances/{id}'
        });
    }
    
    /**
     * [Admin] Cập nhật thông tin một phiên bản trang bị
     */
    public static equipmentInstancesControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentInstancesControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<EquipmentInstancesControllerUpdateResponse, EquipmentInstancesControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/instances/{id}'
        });
    }
    
    /**
     * [Admin] Xóa một phiên bản trang bị
     */
    public static equipmentInstancesControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentInstancesControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<EquipmentInstancesControllerRemoveResponse, EquipmentInstancesControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/instances/{id}'
        });
    }
    
    /**
     * [Admin] Bàn giao một phiên bản trang bị
     */
    public static equipmentInstancesControllerHandover<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentInstancesControllerHandoverData, ThrowOnError>) {
        return (options?.client ?? client).post<EquipmentInstancesControllerHandoverResponse, EquipmentInstancesControllerHandoverError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/instances/{id}/handover'
        });
    }
    
    /**
     * [Admin] Cập nhật thông tin sửa chữa cho trang bị
     */
    public static equipmentInstancesControllerRepair<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentInstancesControllerRepairData, ThrowOnError>) {
        return (options?.client ?? client).post<EquipmentInstancesControllerRepairResponse, EquipmentInstancesControllerRepairError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/instances/{id}/repair'
        });
    }
    
    /**
     * [Admin] Cập nhật thông tin thanh lý cho trang bị
     */
    public static equipmentInstancesControllerDispose<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentInstancesControllerDisposeData, ThrowOnError>) {
        return (options?.client ?? client).post<EquipmentInstancesControllerDisposeResponse, EquipmentInstancesControllerDisposeError, ThrowOnError>({
            ...options,
            url: '/api/v1/sync-equipments/instances/{id}/dispose'
        });
    }
    
}