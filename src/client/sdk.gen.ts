// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser } from '@hey-api/client-axios';
import type { AuthControllerSignInData, AuthControllerSignInError, AuthControllerSignInResponse, EquipmentGroupsControllerCreateData, EquipmentGroupsControllerCreateError, EquipmentGroupsControllerCreateResponse, EquipmentGroupsControllerFindAllError, EquipmentGroupsControllerFindAllResponse, EquipmentGroupsControllerFindOneData, EquipmentGroupsControllerFindOneError, EquipmentGroupsControllerFindOneResponse, EquipmentGroupsControllerUpdateData, EquipmentGroupsControllerUpdateError, EquipmentGroupsControllerUpdateResponse, EquipmentGroupsControllerRemoveData, EquipmentGroupsControllerRemoveError, EquipmentGroupsControllerRemoveResponse, QualityLevelsControllerCreateData, QualityLevelsControllerCreateError, QualityLevelsControllerCreateResponse, QualityLevelsControllerFindAllError, QualityLevelsControllerFindAllResponse, QualityLevelsControllerFindOneData, QualityLevelsControllerFindOneError, QualityLevelsControllerFindOneResponse, QualityLevelsControllerUpdateData, QualityLevelsControllerUpdateError, QualityLevelsControllerUpdateResponse, QualityLevelsControllerRemoveData, QualityLevelsControllerRemoveError, QualityLevelsControllerRemoveResponse, UnitsControllerCreateData, UnitsControllerCreateError, UnitsControllerCreateResponse, UnitsControllerFindAllError, UnitsControllerFindAllResponse, UnitsControllerFindOneData, UnitsControllerFindOneError, UnitsControllerFindOneResponse, UnitsControllerUpdateData, UnitsControllerUpdateError, UnitsControllerUpdateResponse, UnitsControllerRemoveData, UnitsControllerRemoveError, UnitsControllerRemoveResponse, UsersControllerCreateData, UsersControllerCreateError, UsersControllerCreateResponse, UsersControllerFindAllError, UsersControllerFindAllResponse, UsersControllerFindOneData, UsersControllerFindOneError, UsersControllerFindOneResponse, UsersControllerUpdateData, UsersControllerUpdateError, UsersControllerUpdateResponse, UsersControllerRemoveData, UsersControllerRemoveError, UsersControllerRemoveResponse } from './types.gen';

export const client = createClient(createConfig({
    throwOnError: true
}));

export class AuthService {
    /**
     * Đăng nhập hệ thống
     */
    public static authControllerSignIn<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<AuthControllerSignInData, ThrowOnError>) {
        return (options?.client ?? client).post<AuthControllerSignInResponse, AuthControllerSignInError, ThrowOnError>({
            ...options,
            url: '/api/auth/login'
        });
    }
    
}

export class CategoriesEquipmentGroupsService {
    /**
     * Tạo một nhóm loại trang bị mới (Admin)
     */
    public static equipmentGroupsControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentGroupsControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<EquipmentGroupsControllerCreateResponse, EquipmentGroupsControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/equipment-groups'
        });
    }
    
    /**
     * Lấy danh sách tất cả các nhóm loại trang bị
     */
    public static equipmentGroupsControllerFindAll<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<EquipmentGroupsControllerFindAllResponse, EquipmentGroupsControllerFindAllError, ThrowOnError>({
            ...options,
            url: '/api/equipment-groups'
        });
    }
    
    /**
     * Lấy thông tin chi tiết một nhóm
     */
    public static equipmentGroupsControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentGroupsControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<EquipmentGroupsControllerFindOneResponse, EquipmentGroupsControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/equipment-groups/{id}'
        });
    }
    
    /**
     * Cập nhật thông tin một nhóm (Admin)
     */
    public static equipmentGroupsControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentGroupsControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<EquipmentGroupsControllerUpdateResponse, EquipmentGroupsControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/equipment-groups/{id}'
        });
    }
    
    /**
     * Xoá một nhóm (Admin)
     */
    public static equipmentGroupsControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<EquipmentGroupsControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<EquipmentGroupsControllerRemoveResponse, EquipmentGroupsControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/equipment-groups/{id}'
        });
    }
    
}

export class CategoriesQualityLevelsService {
    /**
     * Tạo một phân cấp chất lượng mới (Admin)
     */
    public static qualityLevelsControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<QualityLevelsControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<QualityLevelsControllerCreateResponse, QualityLevelsControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/quality-levels'
        });
    }
    
    /**
     * Lấy danh sách tất cả các phân cấp chất lượng
     */
    public static qualityLevelsControllerFindAll<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<QualityLevelsControllerFindAllResponse, QualityLevelsControllerFindAllError, ThrowOnError>({
            ...options,
            url: '/api/quality-levels'
        });
    }
    
    /**
     * Lấy thông tin chi tiết một phân cấp
     */
    public static qualityLevelsControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<QualityLevelsControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<QualityLevelsControllerFindOneResponse, QualityLevelsControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/quality-levels/{id}'
        });
    }
    
    /**
     * Cập nhật thông tin một phân cấp (Admin)
     */
    public static qualityLevelsControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<QualityLevelsControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<QualityLevelsControllerUpdateResponse, QualityLevelsControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/quality-levels/{id}'
        });
    }
    
    /**
     * Xoá một phân cấp (Admin)
     */
    public static qualityLevelsControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<QualityLevelsControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<QualityLevelsControllerRemoveResponse, QualityLevelsControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/quality-levels/{id}'
        });
    }
    
}

export class CategoriesUnitsService {
    /**
     * Tạo một đơn vị/phòng ban mới (Admin)
     */
    public static unitsControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UnitsControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<UnitsControllerCreateResponse, UnitsControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/units'
        });
    }
    
    /**
     * Lấy danh sách tất cả các đơn vị
     */
    public static unitsControllerFindAll<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<UnitsControllerFindAllResponse, UnitsControllerFindAllError, ThrowOnError>({
            ...options,
            url: '/api/units'
        });
    }
    
    /**
     * Lấy thông tin chi tiết một đơn vị
     */
    public static unitsControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UnitsControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<UnitsControllerFindOneResponse, UnitsControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/units/{id}'
        });
    }
    
    /**
     * Cập nhật thông tin một đơn vị (Admin)
     */
    public static unitsControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UnitsControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<UnitsControllerUpdateResponse, UnitsControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/units/{id}'
        });
    }
    
    /**
     * Xoá một đơn vị (Admin)
     */
    public static unitsControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UnitsControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<UnitsControllerRemoveResponse, UnitsControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/units/{id}'
        });
    }
    
}

export class UsersService {
    /**
     * Tạo người dùng mới (Chỉ Admin)
     */
    public static usersControllerCreate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UsersControllerCreateData, ThrowOnError>) {
        return (options?.client ?? client).post<UsersControllerCreateResponse, UsersControllerCreateError, ThrowOnError>({
            ...options,
            url: '/api/users'
        });
    }
    
    /**
     * Lấy danh sách tất cả người dùng
     */
    public static usersControllerFindAll<ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<UsersControllerFindAllResponse, UsersControllerFindAllError, ThrowOnError>({
            ...options,
            url: '/api/users'
        });
    }
    
    /**
     * Lấy thông tin chi tiết một người dùng
     */
    public static usersControllerFindOne<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UsersControllerFindOneData, ThrowOnError>) {
        return (options?.client ?? client).get<UsersControllerFindOneResponse, UsersControllerFindOneError, ThrowOnError>({
            ...options,
            url: '/api/users/{id}'
        });
    }
    
    /**
     * Chỉnh sửa thông tin tài khoản
     */
    public static usersControllerUpdate<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UsersControllerUpdateData, ThrowOnError>) {
        return (options?.client ?? client).patch<UsersControllerUpdateResponse, UsersControllerUpdateError, ThrowOnError>({
            ...options,
            url: '/api/users/{id}'
        });
    }
    
    /**
     * Xoá một người dùng (Chỉ Admin)
     */
    public static usersControllerRemove<ThrowOnError extends boolean = true>(options: OptionsLegacyParser<UsersControllerRemoveData, ThrowOnError>) {
        return (options?.client ?? client).delete<UsersControllerRemoveResponse, UsersControllerRemoveError, ThrowOnError>({
            ...options,
            url: '/api/users/{id}'
        });
    }
    
}