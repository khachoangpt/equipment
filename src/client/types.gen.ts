// This file is auto-generated by @hey-api/openapi-ts

export type ActivityLog = {
    /**
     * Mongo document ID
     */
    _id: string;
    instanceId: EquipmentInstance;
    activityType: 'Bàn giao' | 'Sửa chữa' | 'Kiểm kê' | 'Thanh lý';
    createdBy: User;
    /**
     * Chi tiết hoạt động, cấu trúc thay đổi theo activityType
     */
    details: {
        [key: string]: unknown;
    };
    notes?: string;
    createdAt: string;
    updatedAt: string;
};

export type activityType = 'Bàn giao' | 'Sửa chữa' | 'Kiểm kê' | 'Thanh lý';

export type Component = {
    /**
     * Mongo document ID
     */
    _id: string;
    name: string;
    unitOfMeasure: string;
    quantityInStock: number;
    storageLocation?: string;
    technicalFeatures?: string;
    /**
     * Danh sách URL tài liệu đính kèm
     */
    attachments?: Array<(string)>;
    notes?: string;
    createdAt: string;
    updatedAt: string;
};

export type CreateComponentDto = {
    name: string;
    unitOfMeasure: string;
    /**
     * Số lượng ban đầu trong kho
     */
    quantityInStock?: number;
    storageLocation?: string;
    technicalFeatures?: string;
    /**
     * Danh sách URL tài liệu đính kèm
     */
    attachments?: Array<(string)>;
    notes?: string;
};

export type CreateEquipmentDto = {
    name: string;
    /**
     * ID của Nhóm loại trang bị
     */
    groupId: string;
    field?: string;
    initialPrice?: number;
    countryOfOrigin?: string;
    technicalSpecs?: string;
    configuration?: string;
    images?: Array<(string)>;
    notes?: string;
};

export type CreateEquipmentGroupDto = {
    name: string;
    code: string;
    note?: string;
};

export type CreateEquipmentInstanceDto = {
    /**
     * ID của loại trang bị (trong danh mục)
     */
    equipmentId: string;
    serialNumber: string;
    currentPrice?: number;
    /**
     * Ngày nhập kho
     */
    entryDate?: string;
    /**
     * Ngày sản xuất
     */
    productionDate?: string;
    entryPlanNumber: string;
    supplySource?: string;
    /**
     * ID của Đơn vị nhập
     */
    importingUnitId: string;
    /**
     * ID của Đơn vị sử dụng (ban đầu)
     */
    usingUnitId: string;
    /**
     * ID của Đơn vị đánh giá
     */
    evaluatingUnitId?: string;
    evaluationResult?: string;
    /**
     * ID của Phân cấp chất lượng
     */
    qualityLevelId: string;
    status?: string;
};

export type CreateProductProfileDto = {
    profileName: string;
    unitOfMeasure?: string;
    requiredComponents: Array<RequiredComponentDto>;
    notes?: string;
};

export type CreateQualityLevelDto = {
    name: string;
    code: string;
    note?: string;
};

export type CreateUnitDto = {
    name: string;
    code: string;
    /**
     * ID của đơn vị cha
     */
    parentId?: string;
    description?: string;
};

export type CreateUserDto = {
    username: string;
    /**
     * Mật khẩu phải có ít nhất 6 ký tự
     */
    password: string;
    fullName?: string;
    role?: 'user' | 'admin';
};

export type role = 'user' | 'admin';

export type DisposeDto = {
    /**
     * Số quyết định thanh lý
     */
    decisionNumber: string;
    /**
     * Ngày thanh lý
     */
    disposalDate: string;
    /**
     * Người lập
     */
    createdBy: string;
    /**
     * Người ký quyết định
     */
    signer: string;
    notes?: string;
};

export type Equipment = {
    /**
     * Mongo document ID
     */
    _id: string;
    name: string;
    groupId: EquipmentGroup;
    field?: string;
    initialPrice?: number;
    countryOfOrigin?: string;
    technicalSpecs?: string;
    configuration?: string;
    images?: Array<(string)>;
    notes?: string;
    createdAt: string;
    updatedAt: string;
};

export type EquipmentGroup = {
    /**
     * Mongo document ID
     */
    _id: string;
    name: string;
    code: string;
    note?: string;
    createdAt: string;
    updatedAt: string;
};

export type EquipmentInstance = {
    /**
     * Mongo document ID
     */
    _id: string;
    equipmentId: Equipment;
    serialNumber: string;
    currentPrice?: number;
    entryDate: string;
    productionDate?: string;
    entryPlanNumber: string;
    supplySource?: string;
    /**
     * Đơn vị nhập ban đầu (không thay đổi)
     */
    importingUnitId: (Unit);
    /**
     * Đơn vị đang sử dụng hiện tại (thay đổi khi bàn giao)
     */
    usingUnitId: (Unit);
    qualityLevelId: QualityLevel;
    /**
     * Đơn vị thực hiện đánh giá chất lượng ban đầu
     */
    evaluatingUnitId?: (Unit);
    /**
     * Kết quả/Nội dung đánh giá ban đầu
     */
    evaluationResult?: string;
    status: string;
    createdAt: string;
    updatedAt: string;
};

export type HandoverDto = {
    /**
     * ID của đơn vị nhận trang bị
     */
    toUnitId: string;
    reportNumber: string;
    receiver: string;
    sender: string;
    /**
     * Ngày bán giao
     */
    handoverDate: string;
    notes?: string;
};

export type LoginDto = {
    /**
     * Tên đăng nhập
     */
    username: string;
    /**
     * Mật khẩu
     */
    password: string;
};

export type LoginResponseDto = {
    access_token: string;
};

export type ObjectId = {
    [key: string]: unknown;
};

export type ProductProfile = {
    /**
     * Mongo document ID
     */
    _id: string;
    profileName: string;
    unitOfMeasure: string;
    requiredComponents: Array<RequiredComponent>;
    notes?: string;
    createdAt: string;
    updatedAt: string;
};

export type QualityLevel = {
    /**
     * Mongo document ID
     */
    _id: string;
    name: string;
    code: string;
    note?: string;
    createdAt: string;
    updatedAt: string;
};

export type RepairDto = {
    reportNumber: string;
    repairLocation: string;
    /**
     * Ngày gửi đi sửa chữa
     */
    sentDate: string;
    /**
     * Ngày nhận lại
     */
    receivedDate?: string;
    /**
     * Người gửi đi sửa (dạng text)
     */
    sender: string;
    /**
     * Người nhận lại sau khi sửa (dạng text)
     */
    receiver?: string;
    reason: string;
    result?: string;
    notes?: string;
};

export type RequiredComponent = {
    componentId: Component;
    quantity: number;
};

export type RequiredComponentDto = {
    /**
     * ID của vật tư/linh kiện
     */
    componentId: string;
    /**
     * Số lượng cần thiết
     */
    quantity: number;
};

export type Unit = {
    /**
     * Mongo document ID
     */
    _id: string;
    name: string;
    code: string;
    /**
     * ID của đơn vị cha
     */
    parentId?: (string) | null;
    description?: string;
    createdAt: string;
    updatedAt: string;
};

export type UpdateComponentDto = {
    name?: string;
    unitOfMeasure?: string;
    /**
     * Số lượng ban đầu trong kho
     */
    quantityInStock?: number;
    storageLocation?: string;
    technicalFeatures?: string;
    /**
     * Danh sách URL tài liệu đính kèm
     */
    attachments?: Array<(string)>;
    notes?: string;
};

export type UpdateEquipmentDto = {
    name?: string;
    /**
     * ID của Nhóm loại trang bị
     */
    groupId?: string;
    field?: string;
    initialPrice?: number;
    countryOfOrigin?: string;
    technicalSpecs?: string;
    configuration?: string;
    images?: Array<(string)>;
    notes?: string;
};

export type UpdateEquipmentGroupDto = {
    name?: string;
    code?: string;
    note?: string;
};

export type UpdateEquipmentInstanceDto = {
    /**
     * ID của loại trang bị (trong danh mục)
     */
    equipmentId?: string;
    serialNumber?: string;
    currentPrice?: number;
    /**
     * Ngày nhập kho
     */
    entryDate?: string;
    /**
     * Ngày sản xuất
     */
    productionDate?: string;
    entryPlanNumber?: string;
    supplySource?: string;
    /**
     * ID của Đơn vị nhập
     */
    importingUnitId?: string;
    /**
     * ID của Đơn vị sử dụng (ban đầu)
     */
    usingUnitId?: string;
    /**
     * ID của Đơn vị đánh giá
     */
    evaluatingUnitId?: string;
    evaluationResult?: string;
    /**
     * ID của Phân cấp chất lượng
     */
    qualityLevelId?: string;
    status?: string;
};

export type UpdateProductProfileDto = {
    profileName?: string;
    unitOfMeasure?: string;
    requiredComponents?: Array<RequiredComponentDto>;
    notes?: string;
};

export type UpdateQualityLevelDto = {
    name?: string;
    code?: string;
    note?: string;
};

export type UpdateUnitDto = {
    name?: string;
    code?: string;
    /**
     * ID của đơn vị cha
     */
    parentId?: string;
    description?: string;
};

export type UpdateUserDto = {
    fullName?: string;
    role?: 'user' | 'admin';
};

export type User = {
    /**
     * Mongo document ID
     */
    _id: string;
    /**
     * Tên đăng nhập (duy nhất)
     */
    username: string;
    fullName?: string;
    /**
     * Vai trò người dùng
     */
    role: 'user' | 'admin';
    /**
     * Thời điểm tạo
     */
    createdAt: string;
    /**
     * Thời điểm cập nhật lần cuối
     */
    updatedAt: string;
};

export type UserResponseDto = {
    /**
     * Mongo document ID
     */
    _id: string;
    /**
     * Tên đăng nhập (duy nhất)
     */
    username: string;
    fullName?: string;
    /**
     * Vai trò người dùng
     */
    role: 'user' | 'admin';
    /**
     * Thời điểm tạo
     */
    createdAt: string;
    /**
     * Thời điểm cập nhật lần cuối
     */
    updatedAt: string;
};

export type AppControllerGetHelloResponse = (unknown);

export type AppControllerGetHelloError = unknown;

export type ComponentsControllerCreateData = {
    body: CreateComponentDto;
};

export type ComponentsControllerCreateResponse = (Component);

export type ComponentsControllerCreateError = unknown;

export type ComponentsControllerFindAllResponse = (Array<Component>);

export type ComponentsControllerFindAllError = unknown;

export type ComponentsControllerFindOneData = {
    path: {
        id: string;
    };
};

export type ComponentsControllerFindOneResponse = (Component);

export type ComponentsControllerFindOneError = (unknown);

export type ComponentsControllerUpdateData = {
    body: UpdateComponentDto;
    path: {
        id: string;
    };
};

export type ComponentsControllerUpdateResponse = (Component);

export type ComponentsControllerUpdateError = (unknown);

export type ComponentsControllerRemoveData = {
    path: {
        id: string;
    };
};

export type ComponentsControllerRemoveResponse = (Component);

export type ComponentsControllerRemoveError = (unknown);

export type ProductProfilesControllerCreateData = {
    body: CreateProductProfileDto;
};

export type ProductProfilesControllerCreateResponse = (ProductProfile);

export type ProductProfilesControllerCreateError = unknown;

export type ProductProfilesControllerFindAllResponse = (Array<ProductProfile>);

export type ProductProfilesControllerFindAllError = unknown;

export type ProductProfilesControllerFindOneData = {
    path: {
        id: string;
    };
};

export type ProductProfilesControllerFindOneResponse = (ProductProfile);

export type ProductProfilesControllerFindOneError = (unknown);

export type ProductProfilesControllerUpdateData = {
    body: UpdateProductProfileDto;
    path: {
        id: string;
    };
};

export type ProductProfilesControllerUpdateResponse = (ProductProfile);

export type ProductProfilesControllerUpdateError = (unknown);

export type ProductProfilesControllerRemoveData = {
    path: {
        id: string;
    };
};

export type ProductProfilesControllerRemoveResponse = (ProductProfile);

export type ProductProfilesControllerRemoveError = (unknown);

export type AuthControllerLoginData = {
    body: LoginDto;
};

export type AuthControllerLoginResponse = (LoginResponseDto);

export type AuthControllerLoginError = (unknown);

export type EquipmentGroupsControllerCreateData = {
    body: CreateEquipmentGroupDto;
};

export type EquipmentGroupsControllerCreateResponse = (EquipmentGroup);

export type EquipmentGroupsControllerCreateError = unknown;

export type EquipmentGroupsControllerFindAllResponse = (Array<EquipmentGroup>);

export type EquipmentGroupsControllerFindAllError = unknown;

export type EquipmentGroupsControllerFindOneData = {
    path: {
        id: string;
    };
};

export type EquipmentGroupsControllerFindOneResponse = (EquipmentGroup);

export type EquipmentGroupsControllerFindOneError = (unknown);

export type EquipmentGroupsControllerUpdateData = {
    body: UpdateEquipmentGroupDto;
    path: {
        id: string;
    };
};

export type EquipmentGroupsControllerUpdateResponse = (EquipmentGroup);

export type EquipmentGroupsControllerUpdateError = (unknown);

export type EquipmentGroupsControllerRemoveData = {
    path: {
        id: string;
    };
};

export type EquipmentGroupsControllerRemoveResponse = (EquipmentGroup);

export type EquipmentGroupsControllerRemoveError = (unknown);

export type QualityLevelsControllerCreateData = {
    body: CreateQualityLevelDto;
};

export type QualityLevelsControllerCreateResponse = (QualityLevel);

export type QualityLevelsControllerCreateError = (unknown);

export type QualityLevelsControllerFindAllResponse = (Array<QualityLevel>);

export type QualityLevelsControllerFindAllError = unknown;

export type QualityLevelsControllerFindOneData = {
    path: {
        id: string;
    };
};

export type QualityLevelsControllerFindOneResponse = (QualityLevel);

export type QualityLevelsControllerFindOneError = (unknown);

export type QualityLevelsControllerUpdateData = {
    body: UpdateQualityLevelDto;
    path: {
        id: string;
    };
};

export type QualityLevelsControllerUpdateResponse = (QualityLevel);

export type QualityLevelsControllerUpdateError = (unknown);

export type QualityLevelsControllerRemoveData = {
    path: {
        id: string;
    };
};

export type QualityLevelsControllerRemoveResponse = (QualityLevel);

export type QualityLevelsControllerRemoveError = (unknown);

export type UnitsControllerCreateData = {
    body: CreateUnitDto;
};

export type UnitsControllerCreateResponse = (Unit);

export type UnitsControllerCreateError = (unknown);

export type UnitsControllerFindAllResponse = (Array<Unit>);

export type UnitsControllerFindAllError = unknown;

export type UnitsControllerFindOneData = {
    path: {
        id: string;
    };
};

export type UnitsControllerFindOneResponse = (Unit);

export type UnitsControllerFindOneError = (unknown);

export type UnitsControllerUpdateData = {
    body: UpdateUnitDto;
    path: {
        id: string;
    };
};

export type UnitsControllerUpdateResponse = (Unit);

export type UnitsControllerUpdateError = (unknown);

export type UnitsControllerRemoveData = {
    path: {
        id: string;
    };
};

export type UnitsControllerRemoveResponse = (Unit);

export type UnitsControllerRemoveError = (unknown);

export type UsersControllerCreateData = {
    body: CreateUserDto;
};

export type UsersControllerCreateResponse = (UserResponseDto);

export type UsersControllerCreateError = (unknown);

export type UsersControllerFindAllResponse = (Array<UserResponseDto>);

export type UsersControllerFindAllError = (unknown);

export type UsersControllerFindOneData = {
    path: {
        id: string;
    };
};

export type UsersControllerFindOneResponse = (UserResponseDto);

export type UsersControllerFindOneError = (unknown);

export type UsersControllerUpdateData = {
    body: UpdateUserDto;
    path: {
        id: string;
    };
};

export type UsersControllerUpdateResponse = (UserResponseDto);

export type UsersControllerUpdateError = (unknown);

export type UsersControllerRemoveData = {
    path: {
        id: string;
    };
};

export type UsersControllerRemoveResponse = (UserResponseDto);

export type UsersControllerRemoveError = (unknown);

export type ActivityLogsControllerSearchData = {
    query: {
        /**
         * Loại hoạt động cần tìm kiếm (Bắt buộc)
         */
        activityType: 'Bàn giao' | 'Sửa chữa' | 'Kiểm kê' | 'Thanh lý';
        /**
         * ID của người tạo
         */
        createdBy?: ObjectId;
        /**
         * Ngày kết thúc (YYYY-MM-DD)
         */
        endDate?: string;
        /**
         * ID của phiên bản trang bị
         */
        instanceId?: string;
        /**
         * Số biên bản (sửa chữa) hoặc Số QĐ (thanh lý)
         */
        reportOrDecisionNumber?: string;
        /**
         * Ngày bắt đầu (YYYY-MM-DD)
         */
        startDate?: string;
    };
};

export type ActivityLogsControllerSearchResponse = (Array<ActivityLog>);

export type ActivityLogsControllerSearchError = unknown;

export type ActivityLogsControllerFindByInstanceData = {
    path: {
        instanceId: string;
    };
};

export type ActivityLogsControllerFindByInstanceResponse = (Array<ActivityLog>);

export type ActivityLogsControllerFindByInstanceError = unknown;

export type SyncEquipmentControllerCreateData = {
    body: CreateEquipmentDto;
};

export type SyncEquipmentControllerCreateResponse = (Equipment);

export type SyncEquipmentControllerCreateError = unknown;

export type SyncEquipmentControllerFindAllResponse = (Array<Equipment>);

export type SyncEquipmentControllerFindAllError = unknown;

export type SyncEquipmentControllerFindOneData = {
    path: {
        id: string;
    };
};

export type SyncEquipmentControllerFindOneResponse = (Equipment);

export type SyncEquipmentControllerFindOneError = (unknown);

export type SyncEquipmentControllerUpdateData = {
    body: UpdateEquipmentDto;
    path: {
        id: string;
    };
};

export type SyncEquipmentControllerUpdateResponse = (Equipment);

export type SyncEquipmentControllerUpdateError = (unknown);

export type SyncEquipmentControllerRemoveData = {
    path: {
        id: string;
    };
};

export type SyncEquipmentControllerRemoveResponse = (Equipment);

export type SyncEquipmentControllerRemoveError = (unknown);

export type EquipmentInstancesControllerCreateData = {
    body: CreateEquipmentInstanceDto;
};

export type EquipmentInstancesControllerCreateResponse = (EquipmentInstance);

export type EquipmentInstancesControllerCreateError = (unknown);

export type EquipmentInstancesControllerSearchData = {
    query?: {
        /**
         * Tìm theo nước sản xuất
         */
        countryOfOrigin?: string;
        /**
         * Ngày nhập kết thúc (YYYY-MM-DD)
         */
        entryDateEnd?: string;
        /**
         * Ngày nhập bắt đầu (YYYY-MM-DD)
         */
        entryDateStart?: string;
        /**
         * Tìm theo số kế hoạch nhập
         */
        entryPlanNumber?: string;
        /**
         * ID của Nhóm loại trang bị
         */
        groupId?: string;
        /**
         * Tìm theo tên trang bị (hỗ trợ tìm kiếm gần đúng)
         */
        name?: string;
        /**
         * ID của Phân cấp chất lượng
         */
        qualityLevelId?: string;
        /**
         * Tìm theo số serial (hỗ trợ tìm kiếm gần đúng)
         */
        serialNumber?: string;
        /**
         * Tìm theo trạng thái (ví dụ: "Trong kho")
         */
        status?: string;
        /**
         * ID của Đơn vị sử dụng
         */
        usingUnitId?: string;
    };
};

export type EquipmentInstancesControllerSearchResponse = (Array<EquipmentInstance>);

export type EquipmentInstancesControllerSearchError = unknown;

export type EquipmentInstancesControllerFindOneData = {
    path: {
        id: string;
    };
};

export type EquipmentInstancesControllerFindOneResponse = (EquipmentInstance);

export type EquipmentInstancesControllerFindOneError = (unknown);

export type EquipmentInstancesControllerUpdateData = {
    body: UpdateEquipmentInstanceDto;
    path: {
        id: string;
    };
};

export type EquipmentInstancesControllerUpdateResponse = (EquipmentInstance);

export type EquipmentInstancesControllerUpdateError = (unknown);

export type EquipmentInstancesControllerRemoveData = {
    path: {
        id: string;
    };
};

export type EquipmentInstancesControllerRemoveResponse = (EquipmentInstance);

export type EquipmentInstancesControllerRemoveError = (unknown);

export type EquipmentInstancesControllerHandoverData = {
    body: HandoverDto;
    path: {
        id: string;
    };
};

export type EquipmentInstancesControllerHandoverResponse = (EquipmentInstance);

export type EquipmentInstancesControllerHandoverError = (unknown);

export type EquipmentInstancesControllerRepairData = {
    body: RepairDto;
    path: {
        id: string;
    };
};

export type EquipmentInstancesControllerRepairResponse = (EquipmentInstance);

export type EquipmentInstancesControllerRepairError = (unknown);

export type EquipmentInstancesControllerDisposeData = {
    body: DisposeDto;
    path: {
        id: string;
    };
};

export type EquipmentInstancesControllerDisposeResponse = (EquipmentInstance);

export type EquipmentInstancesControllerDisposeError = (unknown);