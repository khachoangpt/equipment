// This file is auto-generated by @hey-api/openapi-ts

export type CheckAssemblyDto = {
    productId: string;
    quantityToAssemble: number;
};

export type CreateAssembledProductDto = {
    name: string;
    componentList: Array<RequiredComponentDto>;
};

export type CreateCategoryDto = {
    name: string;
    code?: string;
    type: 'EQUIPMENT_GROUP' | 'QUALITY_LEVEL';
    notes?: string;
};

export type type = 'EQUIPMENT_GROUP' | 'QUALITY_LEVEL';

export type CreateComponentDto = {
    name: string;
    unitOfMeasure: string;
    quantityInStock: number;
    storageLocation?: string;
};

export type CreateEquipmentDto = {
    serialNumber: string;
    name: string;
    /**
     * ID của Nhóm loại trang bị (từ /categories?type=EQUIPMENT_GROUP)
     */
    groupId: string;
    initialPrice?: number;
    /**
     * ID của Phân cấp chất lượng (từ /categories?type=QUALITY_LEVEL)
     */
    qualityLevelId: string;
    status: string;
    /**
     * ID của Đơn vị đang sử dụng
     */
    currentUnitId: string;
};

export type CreateHandoverDto = {
    voucherNumber: string;
    fromUnitId: string;
    toUnitId: string;
    handoverDate: string;
    receiverId: string;
    equipmentIds: Array<(string)>;
};

export type CreateInventoryDto = {
    inventoryDate: string;
    unitId: string;
    notes?: string;
    updates: Array<EquipmentStatusUpdateDto>;
};

export type CreateLiquidationDto = {
    decisionNumber: string;
    unitId: string;
    liquidationDate: string;
    equipmentIds: Array<(string)>;
    notes?: string;
};

export type CreateMaintenanceDto = {
    voucherNumber?: string;
    location: string;
    sendDate: string;
    receiveDate?: string;
    reason: string;
    result?: string;
    notes?: string;
    equipment?: string;
};

export type CreateUnitDto = {
    /**
     * Tên của đơn vị
     */
    name: string;
    /**
     * Mô tả về đơn vị
     */
    code?: string;
    /**
     * ID của đơn vị cha
     */
    parentUnitId?: string;
};

export type CreateUserDto = {
    username: string;
    firstName: string;
    lastName: string;
    password: string;
    role: 'admin' | 'user';
};

export type role = 'admin' | 'user';

export type EquipmentStatusUpdateDto = {
    equipmentId: string;
    newStatus: string;
};

export type LoginDto = {
    username: string;
    password: string;
};

export type RequiredComponentDto = {
    componentId: string;
    quantity: number;
};

export type UpdateCategoryDto = {
    name?: string;
    code?: string;
    type?: 'EQUIPMENT_GROUP' | 'QUALITY_LEVEL';
    notes?: string;
};

export type UpdateComponentDto = {
    name?: string;
    unitOfMeasure?: string;
    quantityInStock?: number;
    storageLocation?: string;
};

export type UpdateEquipmentDto = {
    serialNumber?: string;
    name?: string;
    /**
     * ID của Nhóm loại trang bị (từ /categories?type=EQUIPMENT_GROUP)
     */
    groupId?: string;
    initialPrice?: number;
    /**
     * ID của Phân cấp chất lượng (từ /categories?type=QUALITY_LEVEL)
     */
    qualityLevelId?: string;
    status?: string;
    /**
     * ID của Đơn vị đang sử dụng
     */
    currentUnitId?: string;
};

export type AssembledEquipmentControllerCheckAssemblyPossibilityData = {
    body: CheckAssemblyDto;
};

export type AssembledEquipmentControllerCheckAssemblyPossibilityResponse = (unknown);

export type AssembledEquipmentControllerCheckAssemblyPossibilityError = unknown;

export type AssembledEquipmentControllerCreateComponentData = {
    body: CreateComponentDto;
};

export type AssembledEquipmentControllerCreateComponentResponse = (unknown);

export type AssembledEquipmentControllerCreateComponentError = unknown;

export type AssembledEquipmentControllerFindAllComponentsResponse = (unknown);

export type AssembledEquipmentControllerFindAllComponentsError = unknown;

export type AssembledEquipmentControllerFindComponentByIdData = {
    path: {
        id: string;
    };
};

export type AssembledEquipmentControllerFindComponentByIdResponse = (unknown);

export type AssembledEquipmentControllerFindComponentByIdError = unknown;

export type AssembledEquipmentControllerUpdateComponentData = {
    body: UpdateComponentDto;
    path: {
        id: string;
    };
};

export type AssembledEquipmentControllerUpdateComponentResponse = (unknown);

export type AssembledEquipmentControllerUpdateComponentError = unknown;

export type AssembledEquipmentControllerRemoveComponentData = {
    path: {
        id: string;
    };
};

export type AssembledEquipmentControllerRemoveComponentResponse = (unknown);

export type AssembledEquipmentControllerRemoveComponentError = unknown;

export type AssembledEquipmentControllerCreateProductData = {
    body: CreateAssembledProductDto;
};

export type AssembledEquipmentControllerCreateProductResponse = (unknown);

export type AssembledEquipmentControllerCreateProductError = unknown;

export type AssembledEquipmentControllerFindAllProductsResponse = (unknown);

export type AssembledEquipmentControllerFindAllProductsError = unknown;

export type CategoriesControllerCreateData = {
    body: CreateCategoryDto;
};

export type CategoriesControllerCreateResponse = (unknown);

export type CategoriesControllerCreateError = unknown;

export type CategoriesControllerFindAllData = {
    query: {
        type: 'EQUIPMENT_GROUP' | 'QUALITY_LEVEL';
    };
};

export type CategoriesControllerFindAllResponse = (unknown);

export type CategoriesControllerFindAllError = unknown;

export type CategoriesControllerFindOneData = {
    path: {
        id: string;
    };
};

export type CategoriesControllerFindOneResponse = (unknown);

export type CategoriesControllerFindOneError = unknown;

export type CategoriesControllerUpdateData = {
    body: UpdateCategoryDto;
    path: {
        id: string;
    };
};

export type CategoriesControllerUpdateResponse = (unknown);

export type CategoriesControllerUpdateError = unknown;

export type CategoriesControllerRemoveData = {
    path: {
        id: string;
    };
};

export type CategoriesControllerRemoveResponse = (unknown);

export type CategoriesControllerRemoveError = unknown;

export type AppControllerGetHelloResponse = (unknown);

export type AppControllerGetHelloError = unknown;

export type AuthControllerLoginData = {
    body: LoginDto;
};

export type AuthControllerLoginResponse = (unknown);

export type AuthControllerLoginError = unknown;

export type OrganizationControllerCreateUnitData = {
    body: CreateUnitDto;
};

export type OrganizationControllerCreateUnitResponse = (unknown);

export type OrganizationControllerCreateUnitError = unknown;

export type OrganizationControllerFindAllUnitsResponse = (unknown);

export type OrganizationControllerFindAllUnitsError = unknown;

export type OrganizationControllerRemoveUnitData = {
    path: {
        id: string;
    };
};

export type OrganizationControllerRemoveUnitResponse = (unknown);

export type OrganizationControllerRemoveUnitError = unknown;

export type OrganizationControllerUpdateUnitData = {
    path: {
        id: string;
    };
};

export type OrganizationControllerUpdateUnitResponse = (unknown);

export type OrganizationControllerUpdateUnitError = unknown;

export type OrganizationControllerFindOneUnitData = {
    path: {
        id: string;
    };
};

export type OrganizationControllerFindOneUnitResponse = (unknown);

export type OrganizationControllerFindOneUnitError = unknown;

export type SyncEquipmentControllerGetHandoverLogsResponse = (unknown);

export type SyncEquipmentControllerGetHandoverLogsError = unknown;

export type SyncEquipmentControllerHandoverData = {
    body: CreateHandoverDto;
};

export type SyncEquipmentControllerHandoverResponse = (unknown);

export type SyncEquipmentControllerHandoverError = unknown;

export type SyncEquipmentControllerGetMaintenanceLogsResponse = (unknown);

export type SyncEquipmentControllerGetMaintenanceLogsError = unknown;

export type SyncEquipmentControllerLogMaintenanceData = {
    body: CreateMaintenanceDto;
};

export type SyncEquipmentControllerLogMaintenanceResponse = (unknown);

export type SyncEquipmentControllerLogMaintenanceError = unknown;

export type SyncEquipmentControllerGetLiquidationLogsResponse = (unknown);

export type SyncEquipmentControllerGetLiquidationLogsError = unknown;

export type SyncEquipmentControllerLiquidateData = {
    body: CreateLiquidationDto;
};

export type SyncEquipmentControllerLiquidateResponse = (unknown);

export type SyncEquipmentControllerLiquidateError = unknown;

export type SyncEquipmentControllerCreateData = {
    body: CreateEquipmentDto;
};

export type SyncEquipmentControllerCreateResponse = (unknown);

export type SyncEquipmentControllerCreateError = unknown;

export type SyncEquipmentControllerFindAllData = {
    query?: {
        unitId?: string;
    };
};

export type SyncEquipmentControllerFindAllResponse = (unknown);

export type SyncEquipmentControllerFindAllError = unknown;

export type SyncEquipmentControllerFindOneData = {
    path: {
        id: string;
    };
};

export type SyncEquipmentControllerFindOneResponse = (unknown);

export type SyncEquipmentControllerFindOneError = unknown;

export type SyncEquipmentControllerUpdateData = {
    body: UpdateEquipmentDto;
    path: {
        id: string;
    };
};

export type SyncEquipmentControllerUpdateResponse = (unknown);

export type SyncEquipmentControllerUpdateError = unknown;

export type SyncEquipmentControllerRemoveData = {
    path: {
        id: string;
    };
};

export type SyncEquipmentControllerRemoveResponse = (unknown);

export type SyncEquipmentControllerRemoveError = unknown;

export type SyncEquipmentControllerPerformInventoryData = {
    body: CreateInventoryDto;
};

export type SyncEquipmentControllerPerformInventoryResponse = (unknown);

export type SyncEquipmentControllerPerformInventoryError = unknown;

export type UserControllerCreateData = {
    body: CreateUserDto;
};

export type UserControllerCreateResponse = (unknown);

export type UserControllerCreateError = unknown;

export type UserControllerGetAllResponse = (unknown);

export type UserControllerGetAllError = unknown;

export type UserControllerGetByIdData = {
    path: {
        id: string;
    };
};

export type UserControllerGetByIdResponse = (unknown);

export type UserControllerGetByIdError = unknown;

export type UserControllerRemoveData = {
    path: {
        id: string;
    };
};

export type UserControllerRemoveResponse = (unknown);

export type UserControllerRemoveError = unknown;

export type UserControllerUpdateData = {
    path: {
        id: string;
    };
};

export type UserControllerUpdateResponse = (unknown);

export type UserControllerUpdateError = unknown;